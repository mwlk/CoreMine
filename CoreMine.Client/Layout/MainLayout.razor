@inherits LayoutComponentBase
@using CoreMine.Client.Services
@inject CoreMine.Client.Services.ThemeService ThemeService
@inject NavigationManager Nav

<RadzenLayout Style="min-height:100vh; display:flex; flex-direction:column;">

    @if (!IsLoginPage)
    {
        <!-- HEADER -->
        <RadzenHeader Style="background-color:#2E5BBA ; color:white; display:flex; align-items:center; padding:0.5rem;">
            <RadzenButton Icon="menu" ButtonStyle="ButtonStyle.Light" Style="margin-right:1rem;" Click="ToggleDrawer" />
            <h2 style="margin:0; flex-grow:1;">DYM Service</h2>
            <RadzenButton Icon="@(darkMode ? "light_mode" : "dark_mode")"
                          ButtonStyle="ButtonStyle.Light"
                          Click="ToggleDarkMode" />
        </RadzenHeader>
    }

    <div style="flex:1; display:flex; overflow:hidden;">

        @if (!IsLoginPage)
        {
            <!-- SIDEBAR -->
            <RadzenSidebar Expanded="@drawerOpen"
                           Style="@($"display:flex; flex-direction:column; height:100vh; width:240px; background-color:{(darkMode ? "#333" : "#f5f5f5")};")">
                <NavMenu />
            </RadzenSidebar>
        }

        <!-- MAIN CONTENT -->
        <RadzenMain Style="flex:1; padding:1rem; background-color:@(darkMode ? "#001828" : "#fafafa"); overflow:auto;">
            @Body
        </RadzenMain>

    </div>

</RadzenLayout>

@code {
    private bool darkMode;
    private bool drawerOpen = true;

    private bool IsLoginPage => Nav.Uri.Contains("/login");

    async void ToggleDarkMode()
    {
        await ThemeService.ToggleTheme();
    }

    void ToggleDrawer()
    {
        drawerOpen = !drawerOpen;
    }

    void ChangeTheme()
    {
        darkMode = ThemeService.IsDarkMode;
        StateHasChanged();
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= ChangeTheme;
    }

    protected override async Task OnInitializedAsync()
    {
        await ThemeService.InitializeAsync();
        darkMode = ThemeService.IsDarkMode;
        ThemeService.OnThemeChanged += ChangeTheme;
    }

}
